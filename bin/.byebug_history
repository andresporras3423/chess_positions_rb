exit
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
next
@cells
exit
@cells
next
pawn
exit
@cells
next
@cells
next
@cells
next
@cells
exit
@cells
exit
@cells
moves
next
moves
next
moves
next
moves
exit
step
moves
step
moves
exit
@pieces_position
exit
@temp_cells
exit
@temp_cells
step
@temp_cells
step
@temp_cells
exit
@temp_cells
exit
@cells
position_.x
exit
moves
exit
@temp_cells
@cells
exit
@cells
continue
available_movements
continue
available_movements
continue
available_movements
continue
available_movements
continue
available_movements
continue
available_movements
continue
available_movements
continue
available_movements
exit
moves
exit
moves
exit
available_movements
exit
moves
exit
moves
exit
@cells
exit
@cells
@temp_cells
exit
moves
continue
moves
continue
moves
continue
exit
moves
continue
exit
continue
exit
@cells
continue
exit
x
x[0][0]="1"
x=Array.new(8).map{Array.new(8,"")}
x
x=Array.new(8).map{Array.new(8,"")}
@cells
continue
@cells
exit
@black_pieces.each { |piece, position| puts "piece: #{piece}, position.x: #{position.x}, position.y: #{position.y}" }
@cells = Array.new(8, Array.new(8, "").clone)
@cells
@black_pieces.each { |piece, position| @cells[position.y][position.x] = piece }
@cells = Array.new(8, Array.new(8, "").clone)
@cells
@cells[3][6]
knight.x + knight_movement.x
knight.y + knight_movement.y
cell_
knight_movement
knight.y
cell_
continue
cell_
continue
cell_
continue
cell_
continue
cell_
knight.y
cell_
knight.x
cell_
continue
cell_
continue
cell_
exit
available_movements
exit
available_movements
exit
moves
continue
movements
continue
@cells
